{
  "name": "addr",
  "version": "1.0.0",
  "description": "Get the remote address of a request, with reverse-proxy support",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/carlos8f/node-addr.git"
  },
  "keywords": [
    "ip",
    "address",
    "reverse-proxy",
    "x-forwarded-for"
  ],
  "author": {
    "name": "Carlos Rodriguez",
    "email": "carlos@s8f.org",
    "url": "http://s8f.org/"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "*",
    "request": "~2.9.203"
  },
  "readme": "addr\n====\n\nGet the remote address of a request, with reverse-proxy support\n\nUsage\n=====\n\n```bash\n$ npm install addr\n```\n\n`addr(req, [proxies])`\n\n- `req`: an `http.ServerRequest` object.\n- `proxes`: an array of IP addresses of trusted proxies. If specified and\n  the request doesn't come from one of these addresses, the `X-Forwarded-For`\n  header will not be honored.\n- Returns: Remote IP address of the request, taken from the `X-Forwarded-For`\n  header if it exists and the request is coming from a trusted proxy.\n\nExample\n=======\n\n```javascript\nvar addr = require('addr')\n  , http = require('http')\n  , port = 3000\n  , proxies = ['127.0.0.1']\n  ;\n\nhttp.createServer(function(req, res) {\n  res.writeHead(200, {'Content-Type': 'application/json'});\n  res.write(JSON.stringify({addr: addr(req, proxies)}));\n  res.end();\n}).listen(port, function() {\n  console.log('test server running on port ' + port);\n});\n```\n\nLicense\n=======\n\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/carlos8f/node-addr/issues"
  },
  "_id": "addr@1.0.0",
  "_from": "addr@~1.0.0"
}
