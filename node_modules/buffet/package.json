{
  "author": {
    "name": "Carlos Rodriguez",
    "email": "carlos@s8f.org",
    "url": "http://s8f.org/"
  },
  "name": "buffet",
  "description": "Performance-oriented static file server",
  "version": "0.6.0",
  "main": "./lib",
  "scripts": {
    "test": "make test"
  },
  "bin": {
    "buffet": "./bin/buffet.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/carlos8f/node-buffet.git"
  },
  "license": "MIT",
  "dependencies": {
    "glob": "~3.1.10",
    "accesslog": "~0.0.1",
    "middler": "~0.6.1",
    "commander": "~1.0.2",
    "dish": "~0.1.0",
    "saw": "~0.4.3"
  },
  "keywords": [
    "static",
    "middleware",
    "server",
    "file",
    "buffer"
  ],
  "devDependencies": {
    "mocha": "*",
    "idgen": "1.x",
    "rimraf": "2.x",
    "ncp": "~0.2.6",
    "benchmarx": "~0.2.0",
    "request": "~2.11.4"
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">= 0.8.0"
  },
  "readme": "buffet\n======\n\nPerformance-oriented static file server\n\n[![build status](https://secure.travis-ci.org/carlos8f/node-buffet.png)](http://travis-ci.org/carlos8f/node-buffet)\n\nIdea\n----\n\nServing static files should be the most efficient thing that a Node.js app can\ndo. Turns out, runtime syscalls to the filesystem can really hang your page\nloads, especially if your filesystem is networked or unreliable in some other way.\n\nBuffet takes a fully-bufferred approach -- all files are fully loaded into\nmemory when your app boots, so you will never feel the burn of the filesystem.\nIn practice, this is immensely efficient. So much so that putting\n[Varnish](https://www.varnish-cache.org/) in front of your app might even make it\nslower! Well, almost (summary from buffet's `make bench`):\n\n```\n****************  varnish (4874.64 rps)\n***************   buffet-server (4421.13 rps)\n*************     buffet (3742.6 rps)\n*********         st (2659.29 rps)\n*********         node-static (2645.31 rps)\n******            send (1646.75 rps)\n*****             ecstatic (1302.24 rps)\n***               paperboy (625.28 rps)\n```\n\nContinuous deployment is also becoming all the rage, and restarting Varnish is\na pain, so consider using Buffet -- your pages will always be fresh and zesty!\n\nUsage\n-----\n\n### Middleware\n\nMiddleware version (compatible with [connect](http://www.senchalabs.org/connect/),\n[union/flatiron](http://flatironjs.org/), [middler](https://npmjs.org/package/middler), etc.)\n\n```javascript\nvar connect = require('connect')\n  , app = connect()\n  , buffet = require('buffet')({root: './public'}) // root defaults to ./public\n\napp.use(buffet);\napp.use(buffet.notFound);\n\nvar server = require('http').createServer(app);\nserver.listen(3000, function () {\n  console.log('test server running on port 3000');\n});\n```\n\n### Easy built-in server\n\n```bash\n$ npm install -g buffet\n$ cd /var/www/html && buffet\nbuffet 0.4.0 listening on port 8080\n```\n\n### As a request handler\n\n```javascript\nvar server = require('http').createServer();\nvar buffet = require('buffet')(); // root defaults to ./public\n\nserver.on('request', function (req, res) {\n  buffet(req, res, function () {\n    buffet.notFound(req, res);\n  });\n});\n\nserver.listen(3000, function () {\n  console.log('test server running on port 3000');\n});\n```\n\nOptions\n-------\n\n- `root`: Document root. Can also be passed as the first parameter to `buffet()`.\n  (Default: `./public`)\n- `indexes`: True to look for `options.index` and serve it for directory requests.\n  (Default: true)\n- `index`: Name of index file to look for. (Default: `index.html`)\n- `gzip`: True to enable gzip when clients can accept it. (Default: `true`)\n- `watch`: True to auto-update the buffer when files change. (Default: `true`)\n- `poweredBy`: True to add the `X-Powered-By` header. (Default: `true`)\n- `maxAge`: Number of max-age seconds to set `Cache-Control` header. Set to\n  `false` or `0` to disable. (Default: `300`)\n- `notFoundPath`: Path to be rendered on `buffetMiddleware.notFound`. (Default:\n  `/404.html`)\n- `keepAlive`: Timeout (in milliseconds) for HTTP keep-alive. (Default: `5000`)\n- `defaultContentType`: If the file does not have an extension, set this to specify the default `Content-Type` sent to the browser. This defaults to `application/octet-stream`.\n\nRunning your own benchmark\n--------------------------\n\nType `make bench` in the buffet directory (you'll need\n[siege](http://www.joedog.org/siege-home/) installed).\n\nBrought to you by [benchmarx](https://github.com/carlos8f/node-benchmarx).\n\nSee [here](https://gist.github.com/3473500) for my results.\n\n- - -\n\n### Developed by [Terra Eclipse](http://www.terraeclipse.com)\nTerra Eclipse, Inc. is a nationally recognized political technology and\nstrategy firm located in Aptos, CA and Washington, D.C.\n\n- - -\n\n### License: MIT\n\n- Copyright (C) 2012 Carlos Rodriguez (http://s8f.org/)\n- Copyright (C) 2012 Terra Eclipse, Inc. (http://www.terraeclipse.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/carlos8f/node-buffet/issues"
  },
  "_id": "buffet@0.6.0",
  "_from": "buffet@"
}
